name: Deployment

on:
  push:
    branches-ignore:
      - dependabot/**
      - release-please-**
  pull_request:
    branches-ignore:
      - release-please-**

jobs:
  release-please:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.repository == 'DIRACGrid/diracx-web' }}
    permissions:
      contents: write
      pull-requests: write
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target-branch: ${{ github.ref_name }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  build-deploy-library-package:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ github.event_name == 'push' && github.repository == 'DIRACGrid/diracx-web' && needs.release-please.outputs.release_created == 'true' }}
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: 'latest'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    # Release Please has already incremented versions and published tags, so we just
    # need to publish all unpublished versions to NPM here
    - name: Publish to NPM
      env:
        NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      run: npx lerna publish from-package --no-push --no-private --yes

  build-storybook-docs:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      pages: write
    if: ${{  github.event_name != 'push' || github.repository == 'DIRACGrid/diracx-web' }}
    steps:
      - uses: actions/checkout@v4
 
      - uses: actions/setup-node@v4
        with:
          node-version: 'latest'
          cache: 'npm'
          
      - name: Build documentation
        run: npm ci && npm run build-storybook -w @dirac-grid/diracx-web-components

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with: 
          path: packages/diracx-web-components/storybook-static

  deploy-storybook-docs:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      pages: write
    needs: [build-storybook-docs, release-please]
    if: needs.release-please.outputs.release_created == 'true'
    steps:    
      - id: deploy
        name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        with:
          token: ${{ github.token }}
               
          
  build-deploy-dev-image:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'push' || github.repository == 'DIRACGrid/diracx-web' }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image (dev)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name == 'push' && github.repository == 'DIRACGrid/diracx-web' && github.ref_name == 'main' }}
          tags: ghcr.io/diracgrid/diracx-web/static:dev
          platforms: linux/amd64,linux/arm64

  build-deploy-release-image:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.repository == 'DIRACGrid/diracx-web' }}
    needs: release-please
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        if: ${{ needs.release-please.outputs.release_created == 'true' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/diracgrid/diracx-web/static:${{ needs.release-please.outputs.tag_name }}
          platforms: linux/amd64,linux/arm64

  build-deploy-dev-gubbins-image:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.repository == 'DIRACGrid/diracx-web' }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image (extension example)
        uses: docker/build-push-action@v6
        with:
          context: ./packages/extensions
          push: ${{ github.event_name == 'push' && github.repository == 'DIRACGrid/diracx-web' && github.ref_name == 'main' }}
          tags: ghcr.io/diracgrid/diracx-web/extension-example:dev
          platforms: linux/amd64,linux/arm64

  build-deploy-release-gubbins-image:
    runs-on: ubuntu-latest
    needs: release-please
    if: needs.release-please.outputs.release_created == 'true'
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image (extension example)
        uses: docker/build-push-action@v6
        with:
          context: ./packages/extensions
          push: ${{ github.event_name == 'push' && github.repository == 'DIRACGrid/diracx-web' && github.ref_name == 'main' }}
          tags: ghcr.io/diracgrid/diracx-web/extension-example:${{ needs.release-please.outputs.tag_name }}
          platforms: linux/amd64,linux/arm64